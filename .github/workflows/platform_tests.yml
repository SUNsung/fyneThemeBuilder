name: Platform Tests
permissions:
  contents: read

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.json'
      - '**.gitignore'
      - '*.txt'
      - '*.sh'
      - '*.yml'

jobs:
  platform_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.19.x', '1.23.x']
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            runner: xvfb-run
          - os: macos-latest
            tags: no_glfw

    steps:
      - uses: actions/checkout@v4

      ########################################################################################################################

      - name: Cache [ubuntu] init
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            go.sum
            go.sum
          key: ${{ runner.os }}-${{ matrix.go-version }}-local
          restore-keys: ${{ runner.os }}-${{ matrix.go-version }}-

      - name: Cache [macos] init
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/go-build
            ~/go/pkg/mod
            go.sum
            go.sum
          key: ${{ runner.os }}-${{ matrix.go-version }}-local
          restore-keys: ${{ runner.os }}-${{ matrix.go-version }}-
          enableCrossOsArchive: true

      - name: Cache [windows] init
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
            go.sum
            go.sum
          key: ${{ runner.os }}-${{ matrix.go-version }}-local
          restore-keys: ${{ runner.os }}-${{ matrix.go-version }}-
          enableCrossOsArchive: true

########################################################################################################################
      - name: Goland init
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: go.sum [macos, ubuntu] init
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' }}
        run: |
          if [ ! -f "go.sum" ]; then
            go mod tidy
          fi
        working-directory: ${{ github.workspace }}

      - name: go.sum [windows] init
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          if (-not (Test-Path "go.sum")) {
            go mod tidy
          }
        working-directory: ${{ github.workspace }}

########################################################################################################################

      - name: Get dependencies
        run: >-
          sudo apt-get update &&
          sudo apt-get install
          bc
          gcc
          libgl1-mesa-dev
          libwayland-dev
          libx11-dev
          libxkbcommon-dev
          xorg-dev
          xvfb
        if: ${{ runner.os == 'Linux' }}

      - name: Get dependencies
        run: >-
          choco install -y
          bc
          mingw
          mesa3d
          wayland
          xorg-server
          xorg-x11-utils
          libxkbcommon
        if: ${{ matrix.os == 'windows-latest' }}


      - name: Tests
        run: ${{ matrix.runner }} go test "-test.benchtime" 10ms -tags "${{ matrix.tags }}" ./...

      - name: Wayland Tests
        run: go test -tags no_glfw,ci,wayland ./...
        if: ${{ runner.os == 'Linux' }}